{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","role","exact","path","file","React","Component","Home","src","alt","width","Projects","title","image","url","description","tag","Recipes","to","Recipe","props","state","recipe","fetch","this","then","response","text","setState","source","Project","href","Nav","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","$","collapse","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f9f076b7.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  NavLink\n} from \"react-router-dom\";\nimport $ from 'jquery';\nimport ReactMarkdown from 'react-markdown';\n\nexport default class App extends React.Component {\n\n  render() {\n    return (\n      <Router>\n        <div className=\"app\">\n          <Nav />\n\n          <main role=\"main\" className=\"flex-shrink-0 container\">\n            <Switch>\n              <Route exact path=\"/recipes\">\n                <Recipes />\n              </Route>\n              <Route exact path=\"/projects\">\n                <Projects />\n              </Route>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route path=\"/apple_pie\">\n                <Recipe file=\"apple_pie.md\" />\n              </Route>\n              <Route path=\"/honey_fried_chicken\">\n                <Recipe file=\"honey_fried_chicken.md\" />\n              </Route>\n              <Route path=\"/pumpkin_bread\">\n                <Recipe file=\"pumpkin_bread.md\" />\n              </Route>\n            </Switch>\n          </main>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <img src=\"me.jpeg\" alt=\"Izzy\" className=\"img-fluid img-thumbnail float-right\" width=\"20%\" />\n        <h1 className=\"mt-5\">Izzy Bennett</h1>\n        <p className=\"lead\">Welcome to my personal website!</p>\n        <p>\n          I am a recent graduate from George Mason University where I earned my BS in Computer Science.<br />\n          This website is a personal project of mine created with React.js<br />\n          Here I have a list of my recent projects, my resume, and some recipes I've collected.<br />\n          I can be reached at <b>me@izzybennett.com</b>\n        </p>\n\n      </div>\n    )\n  }\n}\n\nclass Projects extends React.Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <h1 className=\"mt-5\">Projects</h1>\n        <p className=\"lead\">Recent projects of mine</p>\n        <Project title=\"Groceries\" image=\"groceries_icon.jpeg\" url=\"\" description=\"Android application that allows users to create and colloborate grocery lists with live updates.\"\n          tag=\"Created by Izzy Bennett and Tiernan O'Rourke\" />\n      </div>\n    )\n  }\n}\n\nclass Recipes extends React.Component {\n  render() {\n    return (\n      <div className=\"Recipes\">\n        <h1 className=\"mt-5\">Recipes</h1>\n        <p className=\"lead\">An archive</p>\n        <Router>\n          <div>\n            <nav>\n              <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item\"><Link to=\"/apple_pie\">Apple Pie</Link></li>\n                <li className=\"list-group-item\"><Link to=\"/honey_fried_chicken\">Honey Fried Chicken</Link></li>\n                <li className=\"list-group-item\"><Link to=\"/pumpkin_bread\">Pumpkin Bread</Link></li>\n              </ul>\n            </nav>\n          </div>\n        </Router>\n      </div>\n    )\n  }\n}\n\nclass Recipe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { recipe: null}\n  }\n\n  componentWillMount() {\n    fetch(this.props.file).then((response) => response.text()).then((text) => {\n      this.setState({ recipe: text })\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"Recipe\">\n        <ReactMarkdown source={this.state.recipe} />\n      </div>\n    )\n  }\n}\n\nclass Project extends React.Component {\n  render() {\n    return (\n      <div className=\"card\">\n        <img src=\"\" alt=\"card\" className=\"card-img-top\" />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\"><a href={this.props.url}>{this.props.title}</a></h5>\n          <p className=\"card-text\">{this.props.description}</p>\n          <p className=\"card-text\"><small className=\"text-muted\">{this.props.tag}</small></p>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nclass Nav extends React.Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-light fixed-top\">\n        <Link to=\"/\" className=\"navbar-brand\">Izzy Bennett</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <NavLink to=\"/recipes\" className=\"nav-link\" onClick={() => { $(\"#navbarCollapse\").collapse(\"hide\") }}>Recipes</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/projects\" className=\"nav-link\" onClick={() => { $(\"#navbarCollapse\").collapse(\"hide\") }}>Projects</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/resume.pdf\">Resume</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n}\n\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer mt-auto py-3\">\n        <div className=\"container\">\n          <center>\n            <span className=\"text-muted\">&copy; Izzy Bennett 2020</span>\n          </center>\n        </div>\n      </footer>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}